<?php

use Drupal\ohano_core\Feature\AccountWip;
use Drupal\ohano_core\Feature\ActivityWip;
use Drupal\ohano_core\Feature\DeveloperMode;
use Drupal\ohano_core\Feature\FeedWip;
use Drupal\ohano_core\Feature\HelpWip;
use Drupal\ohano_core\Feature\MessagesWip;

/**
 * Implements hook_preprocess_html().
 */
function ohano_core_preprocess_html(&$variables) {
  $metaRobotsContent = 'noindex, nofollow';

  $variables['page']['#attached']['library'][] = 'ohano_core/admin-theme';
  if (
    count(\Drupal::currentUser()->getRoles()) == 1 &&
    \Drupal::currentUser()->getRoles()[0] == "authenticated" &&
    \Drupal::currentUser()->id() != 1
  ) {
    if ((int) (new \DateTime())->format("m") < 8) {
      \Drupal::messenger()->addMessage(t("Welcome! Do you want to <a href='@url'>learn something about ohano first</a>?", ['@url' => '/ohano']));
    }
    $variables['page']['#attached']['library'][] = 'ohano_core/matomo';

    if (\Drupal::routeMatch()->getRouteName() == "entity.node.canonical") {
      $node = \Drupal::routeMatch()->getParameter("node");
      if ($node->getType() == "page") {
        $metaRobotsContent = 'index, follow';
      }
    }
  }

  $tag = [
    '#tag' => 'meta',
    '#attributes' => [
      'name' => 'robots',
      'content' => $metaRobotsContent
    ]
  ];
  $variables['page']['#attached']['html_head'][] = [$tag, 'robots'];
}

function ohano_core_theme() {
  return [
    'features_block' => [
      'template' => 'features-block',
      'variables' => [
        'features' => NULL,
      ],
    ],
    'feature' => [
      'template' => 'feature',
      'variables' => [
        'icon_class' => NULL,
        'name' => NULL,
        'path' => NULL,
      ],
    ]
  ];
}

/**
 * Implements hook_features_alter().
 */
function ohano_core_features_alter(&$features) {
  $features[] = FeedWip::class;
  $features[] = MessagesWip::class;
  $features[] = ActivityWip::class;
  $features[] = HelpWip::class;
  $features[] = AccountWip::class;

  if (\Drupal::currentUser()->hasPermission('ohano access developer mode')) {
    $features[] = DeveloperMode::class;
  }
}
